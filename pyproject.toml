[project]
name = "nonebot-powertoys"
version = "0.1.0"
description = "funny toys powered by Nonebot2"
authors = [
    { name = "BalconyJH", email = "balconyjh@gmail.com" },
]
dependencies = [
    "nb-cli>=1.2.5",
    "setuptools>=68.2.2",
    "nonebot-adapter-onebot>=2.3.1",
    "uvicorn[standard]>=0.23.2",
    "fastapi>=0.104.0",
    "nonebot2~=2.2",
    "nonebot-plugin-send-anything-anywhere>=0.3.2",
    "tqdm>=4.66.1",
    "nonebot-plugin-user>=0.1.2",
    "nonebot-plugin-orm[sqlite]>=0.6.0",
    "nonebot-plugin-access-control>=0.8.0",
]
requires-python = ">=3.9, <4.0"
readme = "README.md"
license = { text = "MIT" }

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.nonebot]
adapters = [
    { name = "OneBot V12", module_name = "nonebot.adapters.onebot.v12" },
    { name = "OneBot V11", module_name = "nonebot.adapters.onebot.v11" },
]
plugins = []
plugin_dirs = ["nonebot_powertoys/plugins"]
builtin_plugins = ["echo"]
[tool.pdm.dev-dependencies]
test = [
    "nonebug>=0.3.5",
    "pytest-asyncio>=0.21.1",
    "nonebug-saa>=0.2.2",
]

[tool.black]
line-length = 120
target-version = ["py39", "py310", "py311"]
include = '\.pyi?$'
extend-exclude = '''
'''

[tool.isort]
profile = "black"
line_length = 120
length_sort = true
skip_gitignore = true
force_sort_within_sections = true
extra_standard_library = ["typing_extensions"]

[tool.ruff]
line-length = 120
target-version = "py39"

[tool.ruff.lint]
select = [
    "F",     # Pyflakes
    "W",     # pycodestyle warnings
    "E",     # pycodestyle errors
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "C4",    # flake8-comprehensions
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RUF",   # Ruff-specific rules
]
ignore = [
    "E402",   # module-import-not-at-top-of-file
    "UP037",  # quoted-annotation
    "RUF001", # ambiguous-unicode-character-string
    "RUF002", # ambiguous-unicode-character-docstring
    "RUF003", # ambiguous-unicode-character-comment
]

[tool.ruff.lint.flake8-pytest-style]
fixture-parentheses = false
mark-parentheses = false

[tool.pyright]
pythonVersion = "3.9"
pythonPlatform = "All"
executionEnvironments = [
    { root = "./tests", extraPaths = [
        "./",
    ] },
    { root = "./" },
]

typeCheckingMode = "basic"
reportShadowedImports = false
disableBytesTypePromotions = true

[tool.pytest.ini_options]
asyncio_mode = "strict"